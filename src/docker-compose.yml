services:
  postgres:
    image: postgres:17-alpine
    command: postgres -c 'max_connections=250'
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - ./_postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test_network

  django-app-v509:
    build: 
      context: ./django-app-v509
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  express-app-v4182:
    build:
      context: ./express-app-v4182
      dockerfile: Dockerfile
    ports:
      - "3100:3100"
    environment:
      - DB_HOST=postgres
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  postgrest-v1223:
    image: postgrest/postgrest:v12.2.3
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://testuser:testpass@postgres:5432/testdb
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: testuser
      PGRST_SERVER_PROXY_URI: "http://postgrest-v1223:3000" 
    volumes:
      - ./postgrest-v1223/postgrest.conf:/etc/postgrest.conf
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  fastapi-app-v01032:
    build: 
      context: ./fastapi-app-v01032
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=postgres
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  fastify-app-v4261:
    build:
      context: ./fastify-app-v4261
      dockerfile: Dockerfile
    ports:
      - "3101:3101"
    environment:
      - DB_HOST=postgres
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  deno-app-v1402:
    build:
      context: ./deno-app-v1402
      dockerfile: Dockerfile
    ports:
      - "3102:3102"
    environment:
      - DB_HOST=postgres
      - DB_NAME=testdb
      - DB_USER=testuser
      - DB_PASSWORD=testpass
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  npgsqlrest-aot-v221:
    image: vbilopav/npgsqlrest:v2.2.1
    ports:
      - "5001:5001"
    volumes:
      - ./npgsqlrest-aot-v221/appsettings.json:/app/appsettings.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - test_network

  test:
    image: grafana/k6:latest
    volumes:
      - ./_k6/scripts:/scripts
      - ./_k6/results:/results
    environment:
      - RECORDS=10
      - DURATION=60s
      - TARGET=100
    depends_on:
      - django-app-v509
      - express-app-v4182
      - postgrest-v1223
      - fastapi-app-v01032
      - fastify-app-v4261
      - deno-app-v1402
      - npgsqlrest-aot-v221
    entrypoint: ["/bin/sh"]
    command: ["-c", "tail -f /dev/null"]
    networks:
      - test_network

networks:
  test_network:
